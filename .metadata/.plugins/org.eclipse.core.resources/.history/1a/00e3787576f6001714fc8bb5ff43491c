package model.modelImpl;

import java.net.InetSocketAddress;

import org.apache.mina.core.future.ConnectFuture;
import org.apache.mina.filter.codec.ProtocolCodecFilter;
import org.apache.mina.filter.codec.serialization.ObjectSerializationCodecFactory;

import com.alibaba.fastjson.JSON;

public class MainModelImpl {
	MinaClient
	 /*
	    * 测试服务端与客户端程序！
	    a. 启动服务端，然后再启动客户端
	    b. 服务端接收消息并处理成功;
	    */
	    @SuppressWarnings("deprecation")
	    public static void main(String[] args) {
	        // 设置链接超时时间
	        connector.setConnectTimeout(30000);
	        // 添加过滤器  可序列话的对象
	        connector.getFilterChain().addLast(
	                "codec",
	                new ProtocolCodecFilter(new ObjectSerializationCodecFactory()));
	        // 添加业务逻辑处理器类
	        connector.setHandler(new MinaClientHandler());
	        ConnectFuture future = connector.connect(new InetSocketAddress(
	                HOST, PORT));// 创建连接
	        future.awaitUninterruptibly();// 等待连接创建完成
	        session = future.getSession();// 获得session

	        bindstart();
	        // 	pushstart();
	    }

	    public static void bindstart() {
	        logger.info("客户端A绑定服务端");
	        try {
	            UserLogin userLogin = new UserLogin();
	            userLogin.setUsername("foo");
	            userLogin.setPassword("bar");
	            RequestBody companyReq = new RequestBody();
	            companyReq.setAction(Actions.ADD_COMPANY);
	            Company company = new Company();
	            company.setName("公司2");
	            companyReq.setData(company);
	            session.write(JSON.toJSONString(companyReq));// 发送消息
	            System.out.println("客户端A与服务端建立连接成功...发送的消息为:" + companyReq);
	            //      logger.info("客户端A与服务端建立连接成功...发送的消息为:"+sy);
	        } catch (Exception e) {
	            e.printStackTrace();
	            logger.error("客户A端链接异常...", e);
	        }
	        session.getCloseFuture().awaitUninterruptibly();// 等待连接断开
	        connector.dispose();
	    }
}
