package model.modelImpl;


import com.alibaba.fastjson.JSON;

import org.apache.log4j.Logger;
import org.apache.mina.core.future.ConnectFuture;
import org.apache.mina.core.service.IoConnector;
import org.apache.mina.core.session.IoSession;
import org.apache.mina.filter.codec.ProtocolCodecFilter;
import org.apache.mina.filter.codec.serialization.ObjectSerializationCodecFactory;
import org.apache.mina.transport.socket.nio.NioSocketConnector;

import java.net.InetSocketAddress;


    public class MinaClient {
    private static Logger logger = Logger.getLogger(MinaClient.class);
    private static String HOST = "127.0.0.1";
    private static int PORT = 8888;
    private static IoConnector connector = new NioSocketConnector();
    private static IoSession session;

    public static IoConnector getConnector() {
        return connector;
    }

    public static void setConnector(IoConnector connector) {
        MinaClient.connector = connector;
    }
    
    public static void startConnection() {
    	 // 设置链接超时时间
        connector.setConnectTimeout(30000);
        // 添加过滤器  可序列话的对象
        connector.getFilterChain().addLast(
                "codec",
                new ProtocolCodecFilter(new ObjectSerializationCodecFactory()));
        // 添加业务逻辑处理器类
        connector.setHandler(new MinaClientHandler());
        ConnectFuture future = connector.connect(new InetSocketAddress(
                HOST, PORT));// 创建连接
        future.awaitUninterruptibly();// 等待连接创建完成
        session = future.getSession();// 获得session
    }
    
    public static void sendRequest(RequestBody requestBody){
        try {
            UserLogin userLogin = new UserLogin();
            userLogin.setUsername("foo");
            userLogin.setPassword("bar");
            RequestBody companyReq = new RequestBody();
            companyReq.setAction(Actions.ADD_COMPANY);
            Company company = new Company();
            company.setName("公司2");
            companyReq.setData(company);
            session.write(JSON.toJSONString(companyReq));// 发送消息
            System.out.println("客户端发送消息成功，消息为:" + companyReq);
        } catch (Exception e) {
            e.printStackTrace();
            logger.error("客户A端链接异常...", e);
        }
    }
}
